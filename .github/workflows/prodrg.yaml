name: 'Modified-rg-setup'

on:
  workflow_dispatch:
    inputs:
      environment:
        description: 'Environment to deploy to'
        required: true
        default: 'dev'
        type: choice
        options:
          - dev
          - prod

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
        with:
          ref: main
          fetch-depth: 0

      # Dynamically set environment variables based on input
      - name: Set environment variables for Dev
        if: ${{ github.event.inputs.environment == 'dev' }}
        run: |
          echo "AZURE_CLIENT_ID=${{ secrets.NONPROD_AZURE_CLIENT_ID }}" >> $GITHUB_ENV
          echo "AZURE_SUBSCRIPTION_ID=${{ secrets.NONPROD_AZURE_SUBSCRIPTION_ID }}" >> $GITHUB_ENV
          echo "AZURE_CLIENT_SECRET=${{ secrets.NONPROD_AZURE_CLIENT_SECRET }}" >> $GITHUB_ENV
          echo "WORKING_DIR=./DevopsRG-Terraform/Dev/DevOpsRGCreation" >> $GITHUB_ENV

      - name: Set environment variables for Prod
        if: ${{ github.event.inputs.environment == 'prod' }}
        run: |
          echo "AZURE_CLIENT_ID=${{ secrets.PROD_AZURE_CLIENT_ID }}" >> $GITHUB_ENV
          echo "AZURE_SUBSCRIPTION_ID=${{ secrets.PROD_AZURE_SUBSCRIPTION_ID }}" >> $GITHUB_ENV
          echo "AZURE_CLIENT_SECRET=${{ secrets.PROD_ARM_CLIENT_SECRET }}" >> $GITHUB_ENV
          echo "WORKING_DIR=./infra" >> $GITHUB_ENV

      - name: Set shared tenant ID
        run: echo "AZURE_TENANT_ID=${{ secrets.AZURE_TENANT_ID }}" >> $GITHUB_ENV

      - name: Echo Working Directory
        run: echo "Working dir is $WORKING_DIR"

      - name: Set up Terraform
        uses: hashicorp/setup-terraform@v2
        with:
          terraform_version: 1.3.0

      - name: Azure CLI Login
        uses: azure/login@v1
        with:
          creds: >
            {
              "clientId": "${{ env.AZURE_CLIENT_ID }}",
              "tenantId": "${{ env.AZURE_TENANT_ID }}",
              "clientSecret": "${{ env.AZURE_CLIENT_SECRET }}",
              "subscriptionId": "${{ env.AZURE_SUBSCRIPTION_ID }}"
            }

      - name: Initialize Terraform
        run: |
          terraform init -backend-config="resource_group_name=transinfra" \
            -backend-config="storage_account_name=infrastoragetfstate1" \
            -backend-config="container_name=infra-tfstate" \
            -backend-config="key=${{ github.event.inputs.environment }}.tfstate"
        env:
          ARM_CLIENT_ID: ${{ env.AZURE_CLIENT_ID }}
          ARM_CLIENT_SECRET: ${{ env.AZURE_CLIENT_SECRET }}
          ARM_SUBSCRIPTION_ID: ${{ env.AZURE_SUBSCRIPTION_ID }}
          ARM_TENANT_ID: ${{ env.AZURE_TENANT_ID }}
        working-directory: ${{ env.WORKING_DIR }}

      - name: Validate Terraform
        run: terraform validate
        env:
          ARM_CLIENT_ID: ${{ env.AZURE_CLIENT_ID }}
          ARM_CLIENT_SECRET: ${{ env.AZURE_CLIENT_SECRET }}
          ARM_SUBSCRIPTION_ID: ${{ env.AZURE_SUBSCRIPTION_ID }}
          ARM_TENANT_ID: ${{ env.AZURE_TENANT_ID }}
        working-directory: ${{ env.WORKING_DIR }}

      - name: Plan Terraform
        run: terraform plan -out=tfplan -var-file=${{ github.event.inputs.environment }}.tfvars
        env:
          ARM_CLIENT_ID: ${{ env.AZURE_CLIENT_ID }}
          ARM_CLIENT_SECRET: ${{ env.AZURE_CLIENT_SECRET }}
          ARM_SUBSCRIPTION_ID: ${{ env.AZURE_SUBSCRIPTION_ID }}
          ARM_TENANT_ID: ${{ env.AZURE_TENANT_ID }}
        working-directory: ${{ env.WORKING_DIR }}

      - name: Apply Terraform
        run: terraform apply -auto-approve tfplan
        env:
          ARM_CLIENT_ID: ${{ env.AZURE_CLIENT_ID }}
          ARM_CLIENT_SECRET: ${{ env.AZURE_CLIENT_SECRET }}
          ARM_SUBSCRIPTION_ID: ${{ env.AZURE_SUBSCRIPTION_ID }}
          ARM_TENANT_ID: ${{ env.AZURE_TENANT_ID }}
        working-directory: ${{ env.WORKING_DIR }}
